[gd_scene load_steps=9 format=2]

[ext_resource path="res://VanityMirrorPanel.png" type="Texture" id=1]
[ext_resource path="res://VanitySpike.png" type="Texture" id=2]
[ext_resource path="res://VanitySpikeAttack.gd" type="Script" id=3]

[sub_resource type="BoxShape" id=5]
extents = Vector3( 0.5, 0.05, 0.5 )

[sub_resource type="BoxShape" id=3]
extents = Vector3( 0.25, 0.6, 0.1 )

[sub_resource type="Animation" id=1]
resource_name = "Appear"
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Mirror:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 0.5, 1 ),
"update": 0,
"values": [ Vector3( 0, 1, 0 ), Vector3( 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Mirror:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=6]
resource_name = "Attack"
length = 2.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Mirror:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Spike:translation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.1, 1.6 ),
"transitions": PoolRealArray( 1, 0.5, 2, 2, 0.5 ),
"update": 0,
"values": [ Vector3( 0, -0.75, 0 ), Vector3( 0, -0.75, 0 ), Vector3( 0, 0.75, 0 ), Vector3( 0, 0.75, 0 ), Vector3( 0, -0.75, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Mirror:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 1, 1, 2, 3, 4, 5 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Mirror:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 2, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/4/type = "method"
tracks/4/path = NodePath(".")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 2.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Spike:region_rect")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.6, 1, 1.1, 1.5, 1.6 ),
"transitions": PoolRealArray( 0.5, 0.5, 1, 2, 0.5, 0.5 ),
"update": 0,
"values": [ Rect2( 0, 0, 16, 0 ), Rect2( 0, 0, 16, 0 ), Rect2( 0, 0, 16, 24 ), Rect2( 0, 0, 16, 24 ), Rect2( 0, 0, 16, 0 ), Rect2( 0, 0, 16, 0 ) ]
}
tracks/6/type = "method"
tracks/6/path = NodePath("Spike")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 1.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}

[sub_resource type="Animation" id=2]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Mirror:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Spike:translation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, -0.5, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Mirror:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Mirror:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Spike:region_rect")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Rect2( 0, 0, 0, 0 ) ]
}

[node name="Spatial" type="Spatial" groups=["Actor"]]
script = ExtResource( 3 )

[node name="Mirror" type="Sprite3D" parent="."]
transform = Transform( 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0.063, 0 )
pixel_size = 0.0625
axis = 1
texture = ExtResource( 1 )
hframes = 6

[node name="Area" type="Area" parent="Mirror"]

[node name="CollisionShape" type="CollisionShape" parent="Mirror/Area"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.05, 0 )
shape = SubResource( 5 )

[node name="Spike" type="Sprite3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.5, 0 )
pixel_size = 0.0625
texture = ExtResource( 2 )
region_enabled = true

[node name="Area" type="Area" parent="Spike" groups=["Damage"]]

[node name="CollisionPolygon" type="CollisionShape" parent="Spike/Area"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.1, 0 )
shape = SubResource( 3 )

[node name="Anim" type="AnimationPlayer" parent="."]
autoplay = "Appear"
anims/Appear = SubResource( 1 )
anims/Attack = SubResource( 6 )
anims/RESET = SubResource( 2 )
